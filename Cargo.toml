[package]
name = "mapquik"
version = "0.1.0"
authors = ["ekimb, rayan"]
edition = "2021"
default-run = "mapquik"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
bio = "*"
fasthash = "0.4.0"
#generic-array = "0.13.2" #activate if using kmer_array
#typenum = "1.11.2"
structopt = "0.3.1"
array_tool = "1.0.3"
closure = "0.3.0"
libc = "0.2.77"
bio-types = "0.7.0" # for my reimplementation of needleman-wunsch, bio_types is called by bio too
#seq_io= { path = "./seq_io" }
seq_io= { git = "https://github.com/markschl/seq_io" }
#wfa = { git = "https://github.com/ekimb/wfa" }
#seq_io = "0.3.1"
lzzzz = "0.7"
xx-bloomfilter = "0.10.0"
flate2 = "1.0.6"
dashmap = "5.4.0"
thread-id = "3.3.0"
#rust-wfa2 = { git = "https://github.com/rchikhi/rust-wfa2/" }
#libwfa = "0.1"
#rust-seq2kminmers = { git = "https://github.com/rchikhi/rust-seq2kminmers" }
#rust-seq2kminmers = { path = "/pasteur/appa/homes/rchikhi/tools/rust-seq2kminmers" }
rust-seq2kminmers = { path = "/home/rayan/rust-seq2kminmers" }
rust-parallelfastx = { git = "https://github.com/rchikhi/rust-parallelfastx"  }
fxhash = "0.2.1"
chrono = "0.4.22"
[target.'cfg(not(target_env = "msvc"))'.dependencies]
tikv-jemallocator = "0.5"
proc-macro2 = "1.0.60"
regex = "1"

[profile.dev]
opt-level = 3

[profile.release]
opt-level = 3 # Sets optimizing level to maximum performance with no regard for binary size
codegen-units = 1 # Instead of spreading code generation over multiple units only use one unit which can lead to better performance at the cost of compilation time
debug = false # No debug symbols
debug-assertions = false
lto = "fat" # Link time optimizations across all dependencies at the cost of higher compilation time
rpath = false
panic = "abort"
